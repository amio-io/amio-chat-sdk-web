{"version":3,"sources":["webpack://amioChat/webpack/universalModuleDefinition","webpack://amioChat/webpack/bootstrap","webpack://amioChat/./node_modules/debug/src/browser.js","webpack://amioChat/./src/constants.js","webpack://amioChat/./src/connection/connection.js","webpack://amioChat/./node_modules/component-emitter/index.js","webpack://amioChat/./node_modules/engine.io-parser/lib/browser.js","webpack://amioChat/./node_modules/isarray/index.js","webpack://amioChat/./node_modules/buffer/index.js","webpack://amioChat/./node_modules/parseqs/index.js","webpack://amioChat/./node_modules/component-inherit/index.js","webpack://amioChat/./node_modules/socket.io-parser/index.js","webpack://amioChat/./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack://amioChat/./node_modules/engine.io-client/lib/transport.js","webpack://amioChat/./node_modules/parseuri/index.js","webpack://amioChat/./node_modules/socket.io-parser/is-buffer.js","webpack://amioChat/(webpack)/buildin/global.js","webpack://amioChat/./node_modules/socket.io-client/lib/manager.js","webpack://amioChat/./node_modules/engine.io-client/lib/transports/index.js","webpack://amioChat/./node_modules/engine.io-client/lib/transports/polling.js","webpack://amioChat/./node_modules/has-binary2/index.js","webpack://amioChat/./node_modules/yeast/index.js","webpack://amioChat/./node_modules/indexof/index.js","webpack://amioChat/./node_modules/socket.io-client/lib/socket.js","webpack://amioChat/./node_modules/socket.io-client/lib/on.js","webpack://amioChat/./node_modules/component-bind/index.js","webpack://amioChat/./src/connection/session-manager.js","webpack://amioChat/./src/amio-chat-client.js","webpack://amioChat/./node_modules/socket.io-client/lib/index.js","webpack://amioChat/./node_modules/socket.io-client/lib/url.js","webpack://amioChat/./node_modules/process/browser.js","webpack://amioChat/./node_modules/debug/src/common.js","webpack://amioChat/./node_modules/ms/index.js","webpack://amioChat/./node_modules/socket.io-parser/binary.js","webpack://amioChat/./node_modules/base64-js/index.js","webpack://amioChat/./node_modules/ieee754/index.js","webpack://amioChat/./node_modules/engine.io-client/lib/index.js","webpack://amioChat/./node_modules/engine.io-client/lib/socket.js","webpack://amioChat/./node_modules/has-cors/index.js","webpack://amioChat/./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack://amioChat/./node_modules/engine.io-parser/lib/keys.js","webpack://amioChat/./node_modules/arraybuffer.slice/index.js","webpack://amioChat/./node_modules/after/index.js","webpack://amioChat/./node_modules/engine.io-parser/lib/utf8.js","webpack://amioChat/./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack://amioChat/./node_modules/blob/index.js","webpack://amioChat/./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack://amioChat/./node_modules/engine.io-client/lib/transports/websocket.js","webpack://amioChat/./node_modules/to-array/index.js","webpack://amioChat/./node_modules/backo2/index.js","webpack://amioChat/./src/events.js","webpack://amioChat/./src/messages.js","webpack://amioChat/./src/notifications.js","webpack://amioChat/./src/postbacks.js","webpack://amioChat/./src/files.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","process","log","args","console","formatArgs","useColors","namespace","humanize","diff","color","splice","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","error","load","getItem","env","DEBUG","window","type","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","message","AMIO_CHAT_SERVER_URL","STORAGE_SESSION_NAME","SOCKET_IO_DISCONNECT","SOCKET_IO_ERROR","SOCKET_MESSAGE_CLIENT","SOCKET_MESSAGE_SERVER","SOCKET_MESSAGE_ECHO","SOCKET_NOTIFICATION_CLIENT","SOCKET_NOTIFICATION_SERVER","SOCKET_CONNECTION_ACCEPTED","SOCKET_CONNECTION_REJECTED","SOCKET_MESSAGES_READ","SOCKET_MESSAGE_DELIVERED","SOCKET_LIST_MESSAGES","SOCKET_POSTBACK","SOCKET_FILE_UPLOAD","SOCKET_VOICE_UPLOAD","ERROR_CODE_CHANNEL_ID_CHANGED","ERROR_MESSAGE_NOT_CONNECTED","_socket","_interopRequireDefault","_sessionManager","_constants","Connection","_classCallCheck","online","messageReceivedHandler","messageEchoHandler","notificationReceivedHandler","connectionStateChangedHandler","socket","disconnect","config","_this","Promise","resolve","reject","err","channelId","toString","concat","validateConfig","serverUrl","_amioChatServerUrl","storageType","sessionManager","default","opts","secure","reconnection","reconnectionDelay","reconnectionDelayMax","reconnectionAttempts","query","channel_id","sessionId","getId","session_id","on","data","setId","error_code","warn","clear","off","connect","then","catch","io","event","_this2","emit","response","callback","Emitter","obj","mixin","addEventListener","fn","_callbacks","push","once","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","slice","len","listeners","hasListeners","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","test","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","upgrade","noop","packetslist","Blob","map","ary","each","done","result","Array","next","eachWithIndex","el","msg","encodePacket","packet","supportsBinary","utf8encode","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","encodedPackets","totalLength","reduce","acc","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","isArray","arr","global","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","Error","allocUnsafe","from","TypeError","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","constructor","debug","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","hasCORS","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","parser","Transport","path","hostname","port","timestampParam","timestampRequests","readyState","agent","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","onOpen","writable","onData","onPacket","re","parts","exec","uri","source","host","authority","ipv6uri","withNativeBuffer","withNativeArrayBuffer","g","Function","eio","Socket","Backoff","has","Manager","nsps","subs","randomizationFactor","backoff","jitter","timeout","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","prev","alphabet","seed","num","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","sameNamespace","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","SessionManager","sessionStorage","TestStorage","_getStorage","_connection","_events","_messages","_notifications","_postbacks","_files","instance","AmioChatClient","messages","notifications","postbacks","files","url","lookup","cache","managers","forceNew","multiplex","parseuri","loc","href","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","title","browser","argv","version","versions","addListener","prependListener","prependOnceListener","binding","cwd","chdir","umask","selectColor","hash","createDebug","abs","prevTime","enabled","curr","ms","coerce","format","formatter","extend","init","instances","delimiter","toNamespace","regexp","stack","disable","names","skips","enable","h","w","plural","msAbs","isPlural","round","parseFloat","long","fmtLong","fmtShort","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","product","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","async","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","requests","onSuccess","fromError","abort","attachEvent","unloadHandler","terminationEvent","arraybuffer","abv","ii","count","err_cb","bail","proxy","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","byteString","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","part","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","glob","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","setAttribute","complete","initIframe","html","action","submit","BrowserWebSocket","NodeWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","factor","rand","random","deviation","Events","setMessageReceivedHandler","message_id","setMessageEchoHandler","func","setNotificationReceivedHandler","setConnectionStateChangedHandler","content","metadata","_typeof","text","quickReplyPayload","quick_reply","nextCursor","params","pagination","cursor_next","postbackPayload","fileName","mimeType","binaryData","mime_type","content_buffer"],"mappings":"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","file":"amio-chat-sdk-web.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"amio-chat-sdk-web\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"amio-chat-sdk-web\"] = factory();\n\telse\n\t\troot[\"amioChat\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","module.exports = {\n  AMIO_CHAT_SERVER_URL: 'https://chat.amio.io',\n\n  STORAGE_SESSION_NAME: 'amio_chat_session',\n\n  SOCKET_IO_DISCONNECT: 'disconnect',\n  SOCKET_IO_ERROR: 'error',\n\n  SOCKET_MESSAGE_CLIENT: 'message_client',\n  SOCKET_MESSAGE_SERVER: 'message_server',\n  SOCKET_MESSAGE_ECHO: 'message_client_echo',\n  SOCKET_NOTIFICATION_CLIENT: 'notification_client',\n  SOCKET_NOTIFICATION_SERVER: 'notification_server',\n  SOCKET_CONNECTION_ACCEPTED: 'connection_accepted',\n  SOCKET_CONNECTION_REJECTED: 'connection_rejected',\n  SOCKET_MESSAGES_READ: 'messages_read',\n  SOCKET_MESSAGE_DELIVERED: 'message_delivered',\n  SOCKET_LIST_MESSAGES: 'list_messages',\n  SOCKET_POSTBACK: 'postback',\n  SOCKET_FILE_UPLOAD: 'file_upload',\n  SOCKET_VOICE_UPLOAD: 'voice',\n\n  ERROR_CODE_CHANNEL_ID_CHANGED: 1,\n\n  ERROR_MESSAGE_NOT_CONNECTED: 'Not connected, call connect() first.'\n}\n","import io from 'socket.io-client'\nimport SessionManager from './session-manager'\nimport {\n  AMIO_CHAT_SERVER_URL,\n  ERROR_CODE_CHANNEL_ID_CHANGED,\n  ERROR_MESSAGE_NOT_CONNECTED,\n  SOCKET_CONNECTION_ACCEPTED,\n  SOCKET_CONNECTION_REJECTED,\n  SOCKET_IO_DISCONNECT,\n  SOCKET_IO_ERROR,\n  SOCKET_MESSAGE_ECHO,\n  SOCKET_MESSAGE_SERVER,\n  SOCKET_NOTIFICATION_SERVER\n} from '../constants'\n\nclass Connection {\n\n  constructor() {\n    this.online = false\n\n    this.messageReceivedHandler = () => {\n    }\n    this.messageEchoHandler = () => {\n    }\n    this.notificationReceivedHandler = () => {\n    }\n    this.connectionStateChangedHandler = () => {\n    }\n  }\n\n  disconnect() {\n    if(this.socket) {\n      this.socket.disconnect()\n    }\n  }\n\n  connect(config) {\n    return new Promise((resolve, reject) => {\n      const err = validateConfig(config)\n      if(err) {\n        reject(err)\n        return\n      }\n\n      // for dev purposes: set config._amioChatServerUrl to use a different server\n      const serverUrl = config._amioChatServerUrl || AMIO_CHAT_SERVER_URL\n      const storageType = config.storageType || 'local'\n      this.sessionManager = new SessionManager(storageType)\n\n      const opts = {\n        secure: true,\n        reconnection: true,\n        reconnectionDelay: 1000,\n        reconnectionDelayMax: 5000,\n        reconnectionAttempts: 99999,\n        query: {\n          v: 1,\n          channel_id: config.channelId\n        }\n      }\n\n      const sessionId = this.sessionManager.getId()\n      if(sessionId) {\n        opts.query.session_id = sessionId\n      }\n\n      this.disconnect()\n      this.socket = io(serverUrl, opts)\n\n      this.socket.on(SOCKET_CONNECTION_ACCEPTED, data => {\n        this.sessionManager.setId(data.session_id)\n\n        this.online = true\n        this.connectionStateChangedHandler(this.online)\n\n        resolve()\n      })\n\n      this.socket.on(SOCKET_CONNECTION_REJECTED, error => {\n        if(error.error_code === ERROR_CODE_CHANNEL_ID_CHANGED) {\n          console.warn('Session invalidated by the server. New session will be created automatically.')\n          this.sessionManager.clear()\n          this.socket.off()\n          this.connect(config)\n            .then(resolve)\n            .catch(reject)\n          return\n        }\n        reject(`Connection rejected from server. Error: ${JSON.stringify(error)}`)\n      })\n\n      this.socket.on('reconnect_attempt', () => {\n        // if we didn't set the sessionId here, we could end up with a new one after reconnect\n        const sessionId = this.sessionManager.getId()\n        if(sessionId) {\n          this.socket.io.opts.query.session_id = sessionId\n        }\n      })\n\n      this.socket.on(SOCKET_IO_DISCONNECT, () => {\n        this.online = false\n        this.connectionStateChangedHandler(this.online)\n      })\n\n      this.socket.on(SOCKET_IO_ERROR, (err) => {\n        console.error('Received error from server:', err)\n      })\n\n      this.socket.on(SOCKET_MESSAGE_SERVER, data => {\n        this.messageReceivedHandler(data)\n      })\n\n      this.socket.on(SOCKET_MESSAGE_ECHO, data => {\n        this.messageEchoHandler(data)\n      })\n\n      this.socket.on(SOCKET_NOTIFICATION_SERVER, data => {\n        this.notificationReceivedHandler(data)\n      })\n    })\n  }\n\n  emit(event, data) {\n    return new Promise((resolve, reject) => {\n      if(!this.socket) {\n        reject(ERROR_MESSAGE_NOT_CONNECTED)\n        return\n      }\n\n      this.socket.emit(event, data, (response) => {\n        if(response.error_code) {\n          reject(response)\n          return\n        }\n        resolve(response)\n      })\n    })\n  }\n\n  setMessageReceivedHandler(callback) {\n    this.messageReceivedHandler = callback\n  }\n\n  setMessageEchoHandler(callback) {\n    this.messageEchoHandler = callback\n  }\n\n  setNotificationReceivedHandler(callback) {\n    this.notificationReceivedHandler = callback\n  }\n\n  setConnectionStateChangedHandler(callback) {\n    this.connectionStateChangedHandler = callback\n  }\n}\n\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === '[object String]'\n}\n\nfunction validateConfig(config) {\n  if(!config || !config.channelId) {\n    return 'Could not connect: config.channelId is missing.'\n  }\n\n  if(!isString(config.channelId)) {\n    return `Could not connect: config.channelId must be a string. The provided value is: ${JSON.stringify(config.channelId)}`\n  }\n\n  return null\n}\n\nexport default new Connection()\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","import {\n  STORAGE_SESSION_NAME\n} from '../constants'\n\nclass SessionManager {\n\n  constructor(type) {\n    this.type = type\n  }\n\n  _getStorage() {\n    // Chrome can return Access Denied error when trying to access window.localStorage in Private Mode\n    try {\n      switch(this.type) {\n        case 'local': return window.localStorage\n        case 'session': return window.sessionStorage\n        default: return new TestStorage() // used in tests\n      }\n    } catch(e) {\n      return new TestStorage()\n    }\n  }\n\n  getId() {\n    return this._getStorage().getItem(STORAGE_SESSION_NAME)\n  }\n\n  setId(value) {\n    return this._getStorage().setItem(STORAGE_SESSION_NAME, value)\n  }\n\n  clear() {\n    return this._getStorage().removeItem(STORAGE_SESSION_NAME)\n  }\n}\n\nclass TestStorage {\n\n  constructor() {\n    this.storage = {}\n  }\n\n  getItem(key) {\n    return this.storage[key]\n  }\n\n  setItem(key, value) {\n    this.storage[key] = value\n  }\n\n  removeItem(key) {\n    delete this.storage[key]\n  }\n}\n\nexport default SessionManager\n","import connection from './connection/connection'\nimport session from './connection/session-manager'\nimport events from './events'\nimport messages from './messages'\nimport notifications from './notifications'\nimport postbacks from './postbacks'\nimport files from './files'\n\nclass AmioChatClient {\n\n  constructor() {\n    this.events = events\n    this.messages = messages\n    this.notifications = notifications\n    this.postbacks = postbacks\n    this.files = files\n  }\n\n  connect(config) {\n    return connection.connect(config)\n  }\n\n  disconnect() {\n    connection.disconnect()\n  }\n\n  isConnected() {\n    return connection.online\n  }\n\n  getSessionId() {\n    return session.getId()\n  }\n\n}\n\nconst instance = new AmioChatClient()\nexport {instance as amioChat}\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\treturn createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\nfunction glob () {\n  return typeof self !== 'undefined' ? self\n      : typeof window !== 'undefined' ? window\n      : typeof global !== 'undefined' ? global : {};\n}\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = (global.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket, NodeWebSocket;\nif (typeof self === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n} else {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import connection from './connection/connection'\nimport {\n  SOCKET_MESSAGE_DELIVERED\n} from './constants'\n\nclass Events {\n\n  constructor() {\n    this.messageReceivedHandler = () => {\n      console.error('MessageReceivedHandler is not set, use events.onMessageReceived() to set it.')\n    }\n\n    connection.setMessageReceivedHandler(data => {\n      connection.emit(SOCKET_MESSAGE_DELIVERED, {\n        message_id: data.id\n      })\n      this.messageReceivedHandler(data)\n    })\n\n    connection.setMessageEchoHandler(() => {\n      console.error('MessageEchoHandler is not set, use events.onMessageEcho() to set it.')\n    })\n  }\n\n  onMessageReceived(func) {\n    this.messageReceivedHandler = func\n  }\n\n  onMessageEcho(func) {\n    connection.setMessageEchoHandler(func)\n  }\n\n  onNotificationReceived(func) {\n    connection.setNotificationReceivedHandler(func)\n  }\n\n  onConnectionStateChanged(func) {\n    connection.setConnectionStateChangedHandler(func)\n  }\n\n}\n\nexport default new Events()\n","import connection from './connection/connection'\nimport {\n  SOCKET_MESSAGE_CLIENT,\n  SOCKET_LIST_MESSAGES\n} from './constants'\n\nclass Messages {\n\n  send(content, metadata = null) {\n    return new Promise((resolve, reject) => {\n      if(typeof content !== 'object' || content === null) {\n        reject('Content is not an object (did you want to use messages.sendText() instead?).')\n        return\n      }\n\n      if(metadata && typeof metadata !== 'object') {\n        reject('Metadata must be an object.')\n        return\n      }\n\n      const data = {\n        content: content\n      }\n\n      if(metadata) {\n        data.metadata = metadata\n      }\n\n      connection.emit(SOCKET_MESSAGE_CLIENT, data)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  sendText(text, metadata = null) {\n    const content = {\n      type: 'text',\n      payload: text\n    }\n\n    return this.send(content, metadata)\n  }\n\n  sendImage(url, metadata = null) {\n    const content = {\n      type: 'image',\n      payload: {\n        url: url\n      }\n    }\n\n    return this.send(content, metadata)\n  }\n\n  sendFile(url, metadata = null) {\n    const content = {\n      type: 'file',\n      payload: {\n        url: url\n      }\n    }\n\n    return this.send(content, metadata)\n  }\n\n  sendQuickReply(text, quickReplyPayload, metadata = null) {\n    const content = {\n      type: 'text',\n      payload: text,\n      quick_reply: {\n        payload: quickReplyPayload\n      }\n    }\n\n    return this.send(content, metadata)\n  }\n\n  list(nextCursor, max = 10) {\n    const params = {\n      pagination: {\n        max: max,\n        cursor_next: nextCursor\n      }\n    }\n\n    return connection.emit(SOCKET_LIST_MESSAGES, params)\n  }\n\n}\n\nexport default new Messages()\n","import connection from './connection/connection'\nimport {\n  SOCKET_NOTIFICATION_CLIENT,\n  SOCKET_MESSAGES_READ\n} from './constants'\n\nclass Notifications {\n\n  send(payload) {\n    const data = {\n      type: 'custom',\n      payload: payload\n    }\n\n    return connection.emit(SOCKET_NOTIFICATION_CLIENT, data)\n  }\n\n  sendMessagesRead() {\n    return connection.emit(SOCKET_MESSAGES_READ, {})\n  }\n\n}\n\nexport default new Notifications()\n","import connection from './connection/connection'\nimport {\n  SOCKET_POSTBACK\n} from './constants'\n\nclass Postbacks {\n\n  send(postbackPayload = null) {\n    return new Promise((resolve, reject) => {\n      const data = {\n        payload: postbackPayload\n      }\n\n      connection.emit(SOCKET_POSTBACK, data)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n}\n\nexport default new Postbacks()\n","import connection from './connection/connection'\nimport {\n  SOCKET_FILE_UPLOAD,\n  SOCKET_VOICE_UPLOAD\n} from './constants'\n\nclass Files {\n\n  upload(fileName, mimeType, binaryData) {\n    return new Promise((resolve, reject) => {\n      const data = {\n        name: fileName,\n        mime_type: mimeType,\n        content_buffer: Buffer.from(binaryData)\n      }\n\n      connection.emit(SOCKET_FILE_UPLOAD, data)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  uploadVoice(mimeType, binaryData) {\n    return new Promise((resolve, reject) => {\n      const data = {\n        mime_type: mimeType,\n        content_buffer: Buffer.from(binaryData)\n      }\n\n      connection.emit(SOCKET_VOICE_UPLOAD, data)\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n}\n\nexport default new Files()\n"],"sourceRoot":""}